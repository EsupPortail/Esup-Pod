name: Pod Encoding Full Docker
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ

on:
    push:
      branches:
      - main
      - master
      - develop
      - features/**
      - dependabot/**
    pull_request:
      branches:
      - main
      - master
      - develop
env:
    DJANGO_SUPERUSER_USERNAME: "admin"
    DJANGO_SUPERUSER_PASSWORD: "passwd"
    DJANGO_SUPERUSER_EMAIL: "noreplay@uni.fr"
    ELASTICSEARCH_TAG: "elasticsearch:7.17.18"
    ELASTICSEARCH_VERION: "elasticsearch:7.17.18"
    NODE_TAG: "node:19"
    PYTHON_TAG: "python:3.9-buster"
    REDIS_TAG: "redis:alpine3.16"

jobs:
  Pod-Docker-Encoding-Actions:
    runs-on: ubuntu-latest
    steps:
        - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
        - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
        - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
        - name: Check out repository code
          uses: actions/checkout@v4
        - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
        - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
        - name: List files in the repository
          run: |
            ls ${{ github.workspace }}
        - run: echo "üçè This job's status is ${{ job.status }}."

        - name: Create env file containers
          run: |
            touch .env.dev
            echo DJANGO_SUPERUSER_USERNAME="$DJANGO_SUPERUSER_USERNAME" >> .env.dev
            echo DJANGO_SUPERUSER_PASSWORD="$DJANGO_SUPERUSER_PASSWORD" >> .env.dev
            echo DJANGO_SUPERUSER_EMAIL="$DJANGO_SUPERUSER_EMAIL" >> .env.dev
            echo ELASTICSEARCH_TAG="$ELASTICSEARCH_TAG" >> .env.dev
            echo ELASTICSEARCH_VERSION="$ELASTICSEARCH_TAG" >> .env.dev
            echo NODE_TAG="$NODE_TAG" >> .env.dev
            echo PYTHON_TAG="$PYTHON_TAG" >> .env.dev
            echo REDIS_TAG="$REDIS_TAG" >> .env.dev
        - name: cat env
          run: cat .env.dev
        - name: Build container
          run:
            docker-compose -f ./docker-compose-full-dev-with-volumes.yml -p esup-pod build --build-arg ELASTICSEARCH_VERSION=$ELASTICSEARCH_TAG --build-arg NODE_VERSION=$NODE_TAG --build-arg PYTHON_VERSION=$PYTHON_TAG --no-cache --detach --wait --wait-timeout 120
        - name: Docker Up container
          run: 
            docker-compose -f ./docker-compose-full-dev-with-volumes.yml -p esup-pod up
        - name: show running container
          run: docker ps 
        - run: echo "üçè Docker is UP ${{ job.status }}."
        - name: Stop containers
          if: always()
          run: docker-compose -f ./docker-compose-full-dev-with-volumes.yml down
        - run: echo "END"